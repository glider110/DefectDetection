################################################################################
# File generated by HDevelop Version 18.11
#
# Do not modify!
# 最简练的版本 ————glider
################################################################################

cmake_minimum_required(VERSION 3.3 FATAL_ERROR)
project(defect CXX)
set(CMAKE_CXX_FLAGS "-fPIC")

# ==================================================
#  封装内容so
# ==================================================
#类似与以下注释两句
#target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/base64/base64.h})
#target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/base64/base64.h})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/defect)
FILE(GLOB DEFECT_LISTS "defect/*.cpp")
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/base64)
FILE(GLOB BASE64_LISTS "base64/*.cpp")

SET(SOURCE ${DEFECT_LISTS}
	   ${BASE64_LISTS})


# ==================================================
#  Halcon
# ==================================================
#以下两句必须声明 原因不详
set(HALCONROOT /opt/halcon)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
find_package(Halcon)
set (INC_DIRS ${INC_DIRS} ${HALCON_INC_DIRS})
set (LIBS ${LIBS} ${HALCON_LIBS})

# ==================================================
#  output
# ==================================================
#去掉${HEADER}不影响结果
add_library(${PROJECT_NAME} SHARED ${SOURCE} ${HEADER})
target_include_directories(${PROJECT_NAME} PUBLIC ${INC_DIRS})
target_link_libraries(${PROJECT_NAME} PUBLIC ${LIBS})


add_executable(testRun test.cpp )
target_link_libraries(testRun PUBLIC ${PROJECT_NAME})
set_property(TARGET testRun PROPERTY CXX_STANDARD 11)



#说明：1.{SOURCE}扔需要的.cpp（base64/defect）相当于同工程不同源文件
#      2.库的话加target_include_directories/target_link_libraries






